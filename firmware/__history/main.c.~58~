#include <main.h>
#use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8,stream=PORT1)
#use SPI (MASTER, SPI1, BAUD=5000000, MODE=2, BITS=8, STREAM=SPI_1, MSB_FIRST)

unsigned int16 pwm_counter = 0;
unsigned int16 desired_pwm_period = 6578; // 100ms
unsigned int16 duty_cycle_pwm1 = 0;

#INT_TIMER2
void timer_2_timebase(void)
{
   // count timebase
   pwm_counter += 1;
   
   if (pwm_counter == desired_pwm_period)
   {
      pwm_counter = 0; // reset the counter to get the desired period
   }
   else
   {
      // do nothing
   }
   
   if (pwm_counter < desired_pwm_period/2)
   {
      output_high(COMMS_LED);
   }
   else
   {
      output_low(COMMS_LED);
   }
}


void main()
{
   // Set initial state of IO pins
   output_low(USER_LED); // start with led turn off
   output_low(COMMS_LED); // start with led turn off
   output_high(CS_PIN); // start in high to disable the slave
   
   setup_timer_2(T2_DIV_BY_1,76,1);      // 15,2 us overflow, 15,2 us interrupt (PWM time base)
   
   enable_interrupts(INT_RDA); // UART interrupt
   enable_interrupts(INT_TIMER2); // timer 2 interrupt
   enable_interrupts(GLOBAL);

//!   setup_ccp1(CCP_PWM|CCP_SHUTDOWN_AC_L|CCP_SHUTDOWN_BD_L);
//!   setup_ccp2(CCP_PWM|CCP_SHUTDOWN_AC_L|CCP_SHUTDOWN_BD_L);
//!   setup_ccp3(CCP_PWM|CCP_SHUTDOWN_AC_L|CCP_SHUTDOWN_BD_L);
//!   setup_ccp4(CCP_PWM);
//!   setup_ccp5(CCP_PWM);
//!   set_pwm1_duty((int16)0);
//!   set_pwm2_duty((int16)0);
//!   set_pwm3_duty((int16)0);
//!   set_pwm4_duty((int16)0);
//!   set_pwm5_duty((int16)0);
   
   // Configure/set initial 0V at DAC output channels

   while(TRUE)
   {
//!      output_low(USER_LED);
//!      output_high(COMMS_LED);
//!      delay_ms(500);
//!      output_high(USER_LED);
//!      output_low(COMMS_LED);
//!      delay_ms(500);
//!      output_toggle(CS_PIN);
      output_high(USER_LED);
      delay_ms(500);
      output_low(USER_LED);
      delay_ms(500);
   }
}
